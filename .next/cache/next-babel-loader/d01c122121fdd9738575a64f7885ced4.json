{"ast":null,"code":"import { GoogleSpreadsheet } from 'google-spreadsheet';\nimport credentials from '../../credentials.json';\nimport moment from 'moment';\nconst doc = new GoogleSpreadsheet('10wFaJAFkO8AneyNyDTw527YsT_Rs8kkwrNo72d12hCA');\nexport default (async (req, res) => {\n  try {\n    await doc.useServiceAccountAuth(credentials);\n    await doc.loadInfo();\n    const data = JSON.parse(req.body);\n    console.log(data);\n    const sheet = doc.sheetsByIndex[1];\n    const sheetConfig = doc.sheetsByIndex[2];\n    await sheetConfig.loadCells('A3:B3');\n    const activatePromotionCell = sheetConfig.getCell(2, 0);\n    const textPromotionCell = sheetConfig.getCell(2, 1);\n    let Cupom = \"\";\n    let Promo = \"\";\n    let FillDate = \"\";\n\n    const genCupom = () => {\n      const code = parseInt(moment().format('YYMMDDHHmmssSSS')).toString(16).toUpperCase();\n      return code.substr(0, 4) + '-' + code.substr(4, 4) + '-' + code.substr(8, 4);\n    };\n\n    if (activatePromotionCell.value === \"VERDADEIRO\") {\n      //todo gerar cupom\n      Cupom = genCupom();\n      Promo = textPromotionCell.value, FillDate = moment().format('DD/MM/YYYY, HH:mm:ss');\n    }\n\n    const payload = await sheet.addRow({\n      Name: data.Name,\n      Email: data.Email,\n      Whatsapp: data.Whatsapp,\n      Cupom,\n      Promo,\n      \"Fill Date\": FillDate,\n      Rate: 5\n    });\n    console.log(JSON.stringify(payload.Cupom));\n    res.send(JSON.stringify(payload.Cupom));\n  } catch (err) {\n    console.log(err);\n    res.end(err);\n  }\n});","map":{"version":3,"sources":["C:/FrontEndTrack/hunchbox/pages/api/save.js"],"names":["GoogleSpreadsheet","credentials","moment","doc","req","res","useServiceAccountAuth","loadInfo","data","JSON","parse","body","console","log","sheet","sheetsByIndex","sheetConfig","loadCells","activatePromotionCell","getCell","textPromotionCell","Cupom","Promo","FillDate","genCupom","code","parseInt","format","toString","toUpperCase","substr","value","payload","addRow","Name","Email","Whatsapp","Rate","stringify","send","err","end"],"mappings":"AAAA,SAAQA,iBAAR,QAAgC,oBAAhC;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,MAAMC,GAAG,GAAG,IAAIH,iBAAJ,CAAsB,8CAAtB,CAAZ;AAIA,gBAAe,OAAOI,GAAP,EAAYC,GAAZ,KAAkB;AAE/B,MAAG;AACD,UAAMF,GAAG,CAACG,qBAAJ,CAA0BL,WAA1B,CAAN;AACA,UAAME,GAAG,CAACI,QAAJ,EAAN;AAEA,UAAMC,IAAI,GAAIC,IAAI,CAACC,KAAL,CAAWN,GAAG,CAACO,IAAf,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AAEA,UAAMM,KAAK,GAAGX,GAAG,CAACY,aAAJ,CAAkB,CAAlB,CAAd;AAEA,UAAMC,WAAW,GAAGb,GAAG,CAACY,aAAJ,CAAkB,CAAlB,CAApB;AACA,UAAMC,WAAW,CAACC,SAAZ,CAAsB,OAAtB,CAAN;AACA,UAAMC,qBAAqB,GAAGF,WAAW,CAACG,OAAZ,CAAoB,CAApB,EAAuB,CAAvB,CAA9B;AACA,UAAMC,iBAAiB,GAAGJ,WAAW,CAACG,OAAZ,CAAoB,CAApB,EAAuB,CAAvB,CAA1B;AAEA,QAAIE,KAAK,GAAG,EAAZ;AACA,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIC,QAAQ,GAAG,EAAf;;AAEA,UAAMC,QAAQ,GAAG,MAAI;AACnB,YAAMC,IAAI,GAAGC,QAAQ,CAACxB,MAAM,GAAGyB,MAAT,CAAgB,iBAAhB,CAAD,CAAR,CAA6CC,QAA7C,CAAsD,EAAtD,EAA0DC,WAA1D,EAAb;AACA,aAAOJ,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAc,CAAd,IAAmB,GAAnB,GAAyBL,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAc,CAAd,CAAzB,GAA4C,GAA5C,GAAkDL,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAc,CAAd,CAAzD;AACD,KAHD;;AAKA,QAAGZ,qBAAqB,CAACa,KAAtB,KAA8B,YAAjC,EAA8C;AAC5C;AACAV,MAAAA,KAAK,GAAGG,QAAQ,EAAhB;AACAF,MAAAA,KAAK,GAAGF,iBAAiB,CAACW,KAA1B,EACAR,QAAQ,GAAGrB,MAAM,GAAGyB,MAAT,CAAgB,sBAAhB,CADX;AAGD;;AAED,UAAMK,OAAO,GAAG,MAAMlB,KAAK,CAACmB,MAAN,CAAa;AACjCC,MAAAA,IAAI,EAAE1B,IAAI,CAAC0B,IADsB;AAEjCC,MAAAA,KAAK,EAAE3B,IAAI,CAAC2B,KAFqB;AAGjCC,MAAAA,QAAQ,EAAE5B,IAAI,CAAC4B,QAHkB;AAIjCf,MAAAA,KAJiC;AAKjCC,MAAAA,KALiC;AAMjC,mBAAaC,QANoB;AAOjCc,MAAAA,IAAI,EAAE;AAP2B,KAAb,CAAtB;AAUAzB,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAAC6B,SAAL,CAAeN,OAAO,CAACX,KAAvB,CAAZ;AACAhB,IAAAA,GAAG,CAACkC,IAAJ,CAAS9B,IAAI,CAAC6B,SAAL,CAAeN,OAAO,CAACX,KAAvB,CAAT;AACD,GA3CD,CA4CA,OAAMmB,GAAN,EAAU;AACR5B,IAAAA,OAAO,CAACC,GAAR,CAAY2B,GAAZ;AACAnC,IAAAA,GAAG,CAACoC,GAAJ,CAAQD,GAAR;AACD;AACF,CAlDD","sourcesContent":["import {GoogleSpreadsheet} from 'google-spreadsheet';\r\nimport credentials from '../../credentials.json'\r\nimport moment from 'moment';\r\nconst doc = new GoogleSpreadsheet('10wFaJAFkO8AneyNyDTw527YsT_Rs8kkwrNo72d12hCA')\r\n\r\n\r\n\r\nexport default async (req, res)=>{\r\n\r\n  try{\r\n    await doc.useServiceAccountAuth(credentials)\r\n    await doc.loadInfo()\r\n    \r\n    const data = (JSON.parse(req.body));\r\n    console.log(data)\r\n    \r\n    const sheet = doc.sheetsByIndex[1]\r\n\r\n    const sheetConfig = doc.sheetsByIndex[2]\r\n    await sheetConfig.loadCells('A3:B3')\r\n    const activatePromotionCell = sheetConfig.getCell(2, 0) \r\n    const textPromotionCell = sheetConfig.getCell(2, 1)\r\n\r\n    let Cupom = \"\"\r\n    let Promo = \"\"\r\n    let FillDate = \"\"\r\n    \r\n    const genCupom = ()=>{\r\n      const code = parseInt(moment().format('YYMMDDHHmmssSSS')).toString(16).toUpperCase();\r\n      return code.substr(0,4) + '-' + code.substr(4,4) + '-' + code.substr(8,4)\r\n    }\r\n\r\n    if(activatePromotionCell.value===\"VERDADEIRO\"){\r\n      //todo gerar cupom\r\n      Cupom = genCupom()\r\n      Promo = textPromotionCell.value,\r\n      FillDate = moment().format('DD/MM/YYYY, HH:mm:ss');\r\n      \r\n    }\r\n    \r\n    const payload = await sheet.addRow({ \r\n      Name: data.Name,\r\n      Email: data.Email,\r\n      Whatsapp: data.Whatsapp,\r\n      Cupom,\r\n      Promo,\r\n      \"Fill Date\": FillDate,\r\n      Rate: 5\r\n      \r\n    })\r\n    console.log(JSON.stringify(payload.Cupom))\r\n    res.send(JSON.stringify(payload.Cupom))\r\n  }\r\n  catch(err){\r\n    console.log(err)\r\n    res.end(err)\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}