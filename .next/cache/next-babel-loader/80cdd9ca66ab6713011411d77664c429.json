{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { GoogleSpreadsheet } from 'google-spreadsheet';\nimport credentials from '../../credentials.json';\nimport moment from 'moment';\nvar doc = new GoogleSpreadsheet('10wFaJAFkO8AneyNyDTw527YsT_Rs8kkwrNo72d12hCA');\nexport default /*#__PURE__*/(function () {\n  var _s = $RefreshSig$();\n\n  var _ref = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(req, res) {\n    var data, sheet, sheetConfig, activatePromotionCell, textPromotionCell, Cupom, Promo, FillDate, genCupom, payload;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _s();\n\n            _context.prev = 1;\n            _context.next = 4;\n            return doc.useServiceAccountAuth(credentials);\n\n          case 4:\n            _context.next = 6;\n            return doc.loadInfo();\n\n          case 6:\n            data = JSON.parse(req.body);\n            console.log(data);\n            sheet = doc.sheetsByIndex[1];\n            sheetConfig = doc.sheetsByIndex[2];\n            _context.next = 12;\n            return sheetConfig.loadCells('A3:B3');\n\n          case 12:\n            activatePromotionCell = sheetConfig.getCell(2, 0);\n            textPromotionCell = sheetConfig.getCell(2, 1);\n            Cupom = \"\";\n            Promo = \"\";\n            FillDate = \"\";\n\n            genCupom = function genCupom() {\n              var code = parseInt(moment().format('YYMMDDHHmmssSSS')).toString(16).toUpperCase();\n              return code.substr(0, 4) + '-' + code.substr(4, 4) + '-' + code.substr(8, 4);\n            };\n\n            if (activatePromotionCell.value === \"VERDADEIRO\") {\n              //todo gerar cupom\n              Cupom = genCupom();\n              Promo = textPromotionCell.value, FillDate = moment().format('DD/MM/YYYY, HH:mm:ss');\n            }\n\n            _context.next = 21;\n            return sheet.addRow({\n              Name: data.Name,\n              Email: data.Email,\n              Whatsapp: data.Whatsapp,\n              Cupom: Cupom,\n              Promo: Promo,\n              \"Fill Date\": FillDate,\n              Rate: 5\n            });\n\n          case 21:\n            payload = _context.sent;\n            console.log(JSON.stringify(payload.Cupom));\n            res.send(JSON.stringify(payload.Cupom));\n            _context.next = 30;\n            break;\n\n          case 26:\n            _context.prev = 26;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n            res.end(_context.t0);\n\n          case 30:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 26]]);\n  }), \"XzZzjmf42T4ghIIVsLcPZIIQRXQ=\", false, function () {\n    return [doc.useServiceAccountAuth];\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["C:/FrontEndTrack/hunchbox/pages/api/save.js"],"names":["GoogleSpreadsheet","credentials","moment","doc","req","res","useServiceAccountAuth","loadInfo","data","JSON","parse","body","console","log","sheet","sheetsByIndex","sheetConfig","loadCells","activatePromotionCell","getCell","textPromotionCell","Cupom","Promo","FillDate","genCupom","code","parseInt","format","toString","toUpperCase","substr","value","addRow","Name","Email","Whatsapp","Rate","payload","stringify","send","end"],"mappings":"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","sourcesContent":["import {GoogleSpreadsheet} from 'google-spreadsheet';\r\nimport credentials from '../../credentials.json'\r\nimport moment from 'moment';\r\nconst doc = new GoogleSpreadsheet('10wFaJAFkO8AneyNyDTw527YsT_Rs8kkwrNo72d12hCA')\r\n\r\n\r\n\r\nexport default async (req, res)=>{\r\n\r\n  try{\r\n    await doc.useServiceAccountAuth(credentials)\r\n    await doc.loadInfo()\r\n    \r\n    const data = (JSON.parse(req.body));\r\n    console.log(data)\r\n    \r\n    const sheet = doc.sheetsByIndex[1]\r\n\r\n    const sheetConfig = doc.sheetsByIndex[2]\r\n    await sheetConfig.loadCells('A3:B3')\r\n    const activatePromotionCell = sheetConfig.getCell(2, 0) \r\n    const textPromotionCell = sheetConfig.getCell(2, 1)\r\n\r\n    let Cupom = \"\"\r\n    let Promo = \"\"\r\n    let FillDate = \"\"\r\n    \r\n    const genCupom = ()=>{\r\n      const code = parseInt(moment().format('YYMMDDHHmmssSSS')).toString(16).toUpperCase();\r\n      return code.substr(0,4) + '-' + code.substr(4,4) + '-' + code.substr(8,4)\r\n    }\r\n\r\n    if(activatePromotionCell.value===\"VERDADEIRO\"){\r\n      //todo gerar cupom\r\n      Cupom = genCupom()\r\n      Promo = textPromotionCell.value,\r\n      FillDate = moment().format('DD/MM/YYYY, HH:mm:ss');\r\n      \r\n    }\r\n    \r\n    const payload = await sheet.addRow({ \r\n      Name: data.Name,\r\n      Email: data.Email,\r\n      Whatsapp: data.Whatsapp,\r\n      Cupom,\r\n      Promo,\r\n      \"Fill Date\": FillDate,\r\n      Rate: 5\r\n      \r\n    })\r\n    console.log(JSON.stringify(payload.Cupom))\r\n    res.send(JSON.stringify(payload.Cupom))\r\n  }\r\n  catch(err){\r\n    console.log(err)\r\n    res.end(err)\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}